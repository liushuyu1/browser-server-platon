# ***************************开发配置**************************** #
# 当前激活的配置名称(请不要修改)
profile: dev
# 密码加密配置
jasypt:
  encryptor:
    password: ${JASYPT_ENCRYPTOR_PASSWORD:}
#Spring框架内部配置
spring:
  #数据源配置
  datasource:
    url: jdbc:mysql://192.168.9.191:3306/alaya_browser_${version}?useSSL=false&useTimezone=true&serverTimezone=GMT%2B8&allowMultiQueries=true
    username: platon
    password: platon
  #Redis配置
  redis:
    password: platscan
    database: 0
    cluster:
      max-redirects: 3
      nodes: 192.168.16.171:7001,192.168.16.171:7002,192.168.16.171:7000,192.168.16.172:7000,192.168.16.172:7001,192.168.16.172:7002
  #ES配置
  elasticsearch:
    high-level-client:
      hosts: 192.168.120.103,192.168.120.104,192.168.120.105
      port: 9200
      schema: http
      username: elastic
      password: changeme
# 内存环形缓冲区大小，必须是2的指数倍
disruptor:
  queue:
    # 区块事件环形缓冲区大小
    blockBufferSize: 1024
    # 采集事件环形缓冲区大小
    collectionBufferSize: 1024
    # 数据补充环形缓冲区大小
    complementBufferSize: 1024
    # gas price估算消息环形缓冲区大小
    gasEstimateBufferSize: 1024
    # 数据持久化环形缓冲区大小
    persistenceBufferSize: 1024
    #每次处理多少个
    persistenceBatchSize: 10
#日志配置
logging:
  #日志级别
  level:
    org.springframework: error
    org.springframework.retry: error
    com.platon.browser: error
    com.platon.browser.bootstrap: error
    com.platon.browser.collection: error
    com.platon.browser.collection.queue.handler: error
    com.platon.browser.common: error
    com.platon.browser.complement: error
    com.platon.browser.complement.handler: error
    com.platon.browser.complement.converter: error
    com.platon.browser.persistence: error
    com.platon.browser.persistence.handler: error
    com.platon.browser.persistence.queue.handler: error
    com.platon.browser.task: error
  file:
    name: ./logs/${spring.application.name}-${version}-${profile}.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} | %-5level | %thread | trace-id[%X{trace-id}] | %logger{50}[%L] | %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} | %-5level | %thread | trace-id[%X{trace-id}] | %logger{50}[%L] | %msg%n"
  logback:
    rollingpolicy:
      # 日志文件大小上限，达到该上限后，会自动压缩
      max-file-size: 200MB
      # 日志归档的文件名，日志文件达到一定大小之后，自动进行压缩归档
      file-name-pattern: ./logs/${spring.application.name}-${profile}-%d{yyyy-MM-dd}-%i.gz
      # 日志文件保存的天数
      max-history: 1
      # 是否在应用启动时进行归档管理
      clean-history-on-start: true
#PlatOn相关配置
platon:
  # 地址HRP前缀
  addressPrefix: atp
  # 金额显示单位
  valueUnit: ATP
  # 交易输入参数并行解码线程数
  txLogDecodeThreadNum: 200
  # Web3j访问地址
  web3j:
    #HTTP或WS
    protocol: HTTP
    addresses: 192.168.120.151:6789,192.168.120.151:6790
  # 质押节点统计年化率最多取多少个连续周期
  maxSettlePeriodCount4AnnualizedRateStat: 4
  #PlatON初始总发行量(ATP)
  initIssueAmount: 100000000
  #每年固定增发比例
  addIssueRate: 0.05
  #每年增发分配给激励池的比例
  incentiveRateFromIssue: 0.4
  #每个共识轮中回退多少个块是选举下一轮验证人的时机
  electionBackwardBlockCount: 20
  #10年内计算士基金会向激励池填充额度: <第几年-补贴金额(ATP)>
  foundationSubsidies: {
    '1':0,
    '2':0,
    '3':0,
    '4':0,
    '5':0,
    '6':0,
    '7':0,
    '8':0,
    '9':0
  }
  # 初始内置节点默认质押金额(ATP)
  defaultStakingLockedAmount: 10500
  #区块最大Gas限制
  maxBlockGasLimit: 100800000
  #提案url参数模板
  proposalUrlTemplate: https://github.com/danielgogo/PIPs/blob/master/PIP-%s.md
  #提案pip_num参数模板
  proposalPipNumTemplate: PIP-%s
  #keysBase网址
  keyBase: https://keybase.io/
  #keyBase api
  keyBaseApi: _/api/1.0/user/lookup.json?key_suffix=
  #链id
  chainId: 201018
  #同步时的索引查询分页参数配置
  paging:
    erc20-transaction:
      pageSize: 2000
      pageCount: 250
  #Redis命名空间
  redis-namespace: browser:${profile}
  #Es索引命名空间
  es-namespace: browser_${profile}
  #0出块等待的循环访问时间(秒)
  zeroBlockNumber:
    wait-time: 60
# v0.15.0.0版本新增功能涉及的配置
v0150:
  #锁仓最小释放金额参数生效版本
  restrictingMinimumReleaseActiveVersion: 3584
  #调账生效版本
  adjustmentActiveVersion: 3840
  #调账提案ID
  adjustmentPipId: '1609410836.4141252'
  #调账日志输出文件
  adjustLogFilePath: ./adjust.log

task:
  #地址统计任务批次大小
  addressBatchSize: 1000
  #agent与实际链上区块号相差多少个块号时触发调整操作
  gapForAdjust: 20
  #未追上链,批量入ES和Redis的缓存大小
  esRedisNotCatchupBatchSize: 10
  #已追上链,批量入ES和Redis的缓存大小
  esRedisCatchupBatchSize: 10